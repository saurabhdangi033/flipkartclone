{"ast":null,"code":"import * as actionTypes from '../constants/cartConstants';\nimport axios from 'axios';\nexport const addToCart = function (id) {\n  let quantity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return async (dispatch, getState) => {\n    try {\n      const {\n        data\n      } = await axios.get(`http://localhost:8000/product/${id}`);\n      dispatch({\n        type: actionTypes.ADD_TO_CART,\n        payload: { ...data,\n          quantity\n        }\n      });\n      localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    } catch (error) {\n      console.log('Error while calling cart API', error);\n    }\n  };\n};\nexport const incrementItemQuantity = id => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.map(item => item.id === id ? { ...item,\n    quantity: item.quantity + 1\n  } : item);\n  dispatch({\n    type: actionTypes.ADD_TO_CART,\n    payload: cartItems\n  });\n  localStorage.setItem('cartItems', JSON.stringify(cartItems));\n};\nexport const decrementItemQuantity = id => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.map(item => item.id === id && item.quantity > 1 ? { ...item,\n    quantity: item.quantity - 1\n  } : item);\n  dispatch({\n    type: actionTypes.ADD_TO_CART,\n    payload: cartItems\n  });\n  localStorage.setItem('cartItems', JSON.stringify(cartItems));\n};\nexport const removeFromCart = id => (dispatch, getState) => {\n  const cartItems = getState().cart.cartItems.filter(item => item.id !== id);\n  dispatch({\n    type: actionTypes.REMOVE_FROM_CART,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(cartItems));\n};","map":{"version":3,"names":["actionTypes","axios","addToCart","id","quantity","dispatch","getState","data","get","type","ADD_TO_CART","payload","localStorage","setItem","JSON","stringify","cart","cartItems","error","console","log","incrementItemQuantity","map","item","decrementItemQuantity","removeFromCart","filter","REMOVE_FROM_CART"],"sources":["E:/FlipKart-Clone-main/FlipKart-Clone-main/client/src/redux/actions/cartActions.js"],"sourcesContent":["import * as actionTypes from '../constants/cartConstants';\nimport axios from 'axios';\n\nexport const addToCart = (id, quantity = 1) => async (dispatch, getState) => {\n    try { \n        const { data } = await axios.get(`http://localhost:8000/product/${id}`);\n\n        dispatch({ \n            type: actionTypes.ADD_TO_CART, \n            payload: { ...data, quantity } \n        });\n\n        localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n    } catch (error) {\n        console.log('Error while calling cart API', error);\n    }\n};\n\nexport const incrementItemQuantity = (id) => (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.map(item =>\n        item.id === id ? { ...item, quantity: item.quantity + 1 } : item\n    );\n\n    dispatch({\n        type: actionTypes.ADD_TO_CART,\n        payload: cartItems\n    });\n\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n};\n\nexport const decrementItemQuantity = (id) => (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.map(item =>\n        item.id === id && item.quantity > 1 ? { ...item, quantity: item.quantity - 1 } : item\n    );\n\n    dispatch({\n        type: actionTypes.ADD_TO_CART,\n        payload: cartItems\n    });\n\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n};\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n    const cartItems = getState().cart.cartItems.filter(item => item.id !== id);\n\n    dispatch({\n        type: actionTypes.REMOVE_FROM_CART,\n        payload: id\n    });\n\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n};\n"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,4BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,SAAS,GAAG,UAACC,EAAD;EAAA,IAAKC,QAAL,uEAAgB,CAAhB;EAAA,OAAsB,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;IACzE,IAAI;MACA,MAAM;QAAEC;MAAF,IAAW,MAAMN,KAAK,CAACO,GAAN,CAAW,iCAAgCL,EAAG,EAA9C,CAAvB;MAEAE,QAAQ,CAAC;QACLI,IAAI,EAAET,WAAW,CAACU,WADb;QAELC,OAAO,EAAE,EAAE,GAAGJ,IAAL;UAAWH;QAAX;MAFJ,CAAD,CAAR;MAKAQ,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeT,QAAQ,GAAGU,IAAX,CAAgBC,SAA/B,CAAlC;IACH,CATD,CASE,OAAOC,KAAP,EAAc;MACZC,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,KAA5C;IACH;EACJ,CAbwB;AAAA,CAAlB;AAeP,OAAO,MAAMG,qBAAqB,GAAIlB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;EACjE,MAAMW,SAAS,GAAGX,QAAQ,GAAGU,IAAX,CAAgBC,SAAhB,CAA0BK,GAA1B,CAA8BC,IAAI,IAChDA,IAAI,CAACpB,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGoB,IAAL;IAAWnB,QAAQ,EAAEmB,IAAI,CAACnB,QAAL,GAAgB;EAArC,CAAjB,GAA4DmB,IAD9C,CAAlB;EAIAlB,QAAQ,CAAC;IACLI,IAAI,EAAET,WAAW,CAACU,WADb;IAELC,OAAO,EAAEM;EAFJ,CAAD,CAAR;EAKAL,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeE,SAAf,CAAlC;AACH,CAXM;AAaP,OAAO,MAAMO,qBAAqB,GAAIrB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;EACjE,MAAMW,SAAS,GAAGX,QAAQ,GAAGU,IAAX,CAAgBC,SAAhB,CAA0BK,GAA1B,CAA8BC,IAAI,IAChDA,IAAI,CAACpB,EAAL,KAAYA,EAAZ,IAAkBoB,IAAI,CAACnB,QAAL,GAAgB,CAAlC,GAAsC,EAAE,GAAGmB,IAAL;IAAWnB,QAAQ,EAAEmB,IAAI,CAACnB,QAAL,GAAgB;EAArC,CAAtC,GAAiFmB,IADnE,CAAlB;EAIAlB,QAAQ,CAAC;IACLI,IAAI,EAAET,WAAW,CAACU,WADb;IAELC,OAAO,EAAEM;EAFJ,CAAD,CAAR;EAKAL,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeE,SAAf,CAAlC;AACH,CAXM;AAaP,OAAO,MAAMQ,cAAc,GAAItB,EAAD,IAAQ,CAACE,QAAD,EAAWC,QAAX,KAAwB;EAC1D,MAAMW,SAAS,GAAGX,QAAQ,GAAGU,IAAX,CAAgBC,SAAhB,CAA0BS,MAA1B,CAAiCH,IAAI,IAAIA,IAAI,CAACpB,EAAL,KAAYA,EAArD,CAAlB;EAEAE,QAAQ,CAAC;IACLI,IAAI,EAAET,WAAW,CAAC2B,gBADb;IAELhB,OAAO,EAAER;EAFJ,CAAD,CAAR;EAKAS,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAeE,SAAf,CAAlC;AACH,CATM"},"metadata":{},"sourceType":"module"}